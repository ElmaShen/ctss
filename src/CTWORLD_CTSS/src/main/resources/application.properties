# Set here configurations for the database connection
#spring.datasource.url=jdbc:mariadb://localhost:3306/ctworld_ctss
spring.datasource.url=jdbc:mariadb://localhost:2800/ctworld_ctss
spring.datasource.username=Administrator
spring.datasource.password=C0ncept!23
#TA DB USER
#spring.datasource.username=cctech
#spring.datasource.password=cctech123
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# Hibernate ddl auto (create, create-drop, update)
# You can set spring.jpa.hibernate.ddl-auto explicitly and the standard Hibernate property 
# values are none, validate, update, create, create-drop. Spring Boot chooses a default value 
# for you based on whether it thinks your database is embedded (default create-drop) or not (default none). 
#An embedded database is detected by looking at the Connection type: hsqldb, h2 and derby are embedded, 
#the rest are not. Be careful when switching from in-memory to a \u2018real\u2019 database that you don\u2019t make 
#assumptions about the existence of the tables and data in the new platform. You either have to set ddl-auto explicitly, 
#or use one of the other mechanisms to initialize the database.
# spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true

# Use Jadira Usertype for mapping Joda Time types
# For Hibernate native properties must be used spring.jpa.properties.* (the 
# prefix is stripped before adding them to the entity manager).
spring.jpa.properties.jadira.usertype.autoRegisterUserTypes = true
spring.jackson.deserialization.adjust-dates-to-context-time-zone= false

#server port for spring boot
server.port = 8090

#thymeleaf setting
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# project mode this project only have DEV and STD
proj.mode = DEV

#logging.level.org.springframework.web=ERROR
logging.level.proj=DEBUG

#spring.mvc.static-path-pattern=classpath:/static/**

#spring session setting
spring.session.store-type=none 